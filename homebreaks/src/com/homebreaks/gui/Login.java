package com.homebreaks.gui;

import com.homebreaks.main.Person;
import com.homebreaks.util.SHAHashPassword;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import javax.swing.*;
import java.awt.*;
import java.security.NoSuchAlgorithmException;
import java.sql.*;

/**
 * Login-associated class.
 *
 * @author team055
 * @version 1.0
 * @date 05.12.2022
 */

public class Login extends JFrame {
    public JPanel mainPanel;
    private JLabel emailL;
    private JTextField emailT;
    private JLabel passwordL;
    private JButton loginButton;
    private JPasswordField passwordField1;
    private JCheckBox showPasswordCheckBox;

    public Login(JFrame frame, AbstractHomebreaksPanel panel) {
        loginButton.addActionListener(e -> {
            String inputUsername = emailT.getText();
            String password = passwordField1.getText();
            Person user = (authenticate(password, inputUsername));
            if (user != null) {
                frame.dispose();
                // This returns 0 if OK was clicked, -1 if cancel
                int res = JOptionPane.showOptionDialog(null,
                        "Login successful!", "Login success", JOptionPane.DEFAULT_OPTION,
                        JOptionPane.INFORMATION_MESSAGE, panel.imgTransformed, null, null);
                if (res == 0 || res == -1) {
                    panel.setUser(user);
                    panel.updateMenu();
                    panel.updateBookings();
                }
            } else {
                JOptionPane.showMessageDialog
                        (null,
                                "Invalid credentials.",
                                "Error Message",
                                JOptionPane.ERROR_MESSAGE);
            }
        });

        // Hide/unhide Password
        showPasswordCheckBox.addActionListener(e -> {
            if (showPasswordCheckBox.isSelected()) {
                passwordField1.setEchoChar((char) 0);
            } else {
                passwordField1.setEchoChar('\u25CF');
            }
        });
    }

    /**
     * Hash password string with SHA-512
     *
     * @param inputPassword user-input password
     * @param inputUsername user-input username
     * @return Person object with email and roles set for GUI handling.
     */
    private static Person authenticate(String inputPassword, String inputUsername) {
        Person user = new Person();
        byte[] salt;

        try (Connection connection = DriverManager.getConnection
                ("jdbc:mysql://stusql.dcs.shef.ac.uk/team055", "team055", "c471f365")) {

            // Get salt from the database
            PreparedStatement saltStatement = connection.prepareStatement("SELECT salt FROM persons WHERE email = ?");
            saltStatement.setString(1, inputUsername);
            ResultSet saltRs = saltStatement.executeQuery();
            if (saltRs.next()) {
                salt = saltRs.getBytes("salt");
            } else {
                salt = new byte[16];
            }

            // Get user from database
            PreparedStatement ps = connection.prepareStatement
                    ("SELECT * FROM persons WHERE password = ? AND email = ?");
            ps.setString(1, SHAHashPassword.hashPassword(inputPassword, salt));
            ps.setString(2, inputUsername);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                user.setIsGuest(rs.getInt("isGuest"));
                user.setIsHost(rs.getInt("isHost"));
                user.setEmail(rs.getString("email"));
            } else {
                return null;
            }
        } catch (SQLException | NoSuchAlgorithmException e) {
            e.printStackTrace();
            throw new IllegalStateException("Connection Failed!", e);
        }

        return user;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 5, new Insets(50, 50, 50, 50), -1, -1));
        loginButton = new JButton();
        loginButton.setText("Login");
        mainPanel.add(loginButton, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(371, 30), null, 0, false));
        emailL = new JLabel();
        emailL.setText("Email Address");
        mainPanel.add(emailL, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        emailT = new JTextField();
        emailT.setText("");
        mainPanel.add(emailT, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(371, 30), null, 0, false));
        showPasswordCheckBox = new JCheckBox();
        showPasswordCheckBox.setText("Show Password");
        mainPanel.add(showPasswordCheckBox, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordL = new JLabel();
        passwordL.setText("Password");
        mainPanel.add(passwordL, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordField1 = new JPasswordField();
        mainPanel.add(passwordField1, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}

